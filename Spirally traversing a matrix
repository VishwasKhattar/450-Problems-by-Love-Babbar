 class Solution
 {
       vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
       {
            int top=0,bott=r-1,left=0,right=c-1,dir=0;
            Vector<Vector<int>> res;
            while(top<=bott && left<=right)
            {
                if(dir==0)
                {
                    for(int i=0;i<=right;i++)
                    {
                        res.push_back(matrix[top][i]);
                    }
                    top++;
                }
                else if(dir==1)
                {
                    for(int i=top;i<=bott;i++)
                    {
                        res.push_back(matrix[i][right]);
                    }
                    right--;
                }
                else if(dir==2)
                {
                    for(int i=right;i>=left;i--)
                    {
                        res.puch_back(matrix[bott][i]);
                    }
                    bott--;
                }
                else if(dir==3)
                {
                    for(int i=bott;i>=top;i--)
                    {
                        res.push_back(matrix[i][left]);
                    }
                    left++;
                }
                dir=(dir+1)%4;
            }
            return res;
        }

    }
    }
    };
