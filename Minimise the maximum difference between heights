// Minimise the maximum difference between heights [V.IMP]

#include <stdio.h>
#include <iostream>
#include <algorithm>

using namespace std;

void minimize(int arr[], int n, int k)
{
    int maxi, mini;
    if (n == 1) // If there is only one tower
    {
        cout << "0";
    }
    sort(arr, arr + n); // Sorting if array is unsorted
    int diff = arr[n - 1] - arr[0];
    for (int i = 1; i < n; i++)
    {
        if (arr[i - k] == 0) // If any element of array is becoming negative
        {
            continue;
        }

        maxi = max(arr[i - 1] + k, arr[n - 1] - k); // Finding Maximum element we could find by comparing last element -k with all other elements +k
        mini = min(arr[0] + k, arr[i] - k);         //  Finding Minimum element we could find by comparing first element +k with all other elements -k
        diff = min(diff, maxi - mini);              // Getting the minimum Difference
    }
    cout << "Difference = " << diff;
}

int main()
{
    int arr[] = {1, 5, 8, 10};
    int n = sizeof(arr) / sizeof(int);
    int k = 2;
    minimize(arr, n, k);
    return 0;
}
